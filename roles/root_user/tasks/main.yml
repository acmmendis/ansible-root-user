---

- name: Exit playbook if systemuser is defined as 'root'
  ansible.builtin.fail:
    msg: "Playbook execution stopped: 'systemuser' cannot be 'root'."
  when: systemuser == 'root'

- name: Generate a random password
  set_fact:
    user_pass: "{{ pwd_alias }}"
  no_log: true

- name: Create a user group
  ansible.builtin.group:
    name: "{{ group_name | default(systemuser) }}"
    system: false
    state: present
  register: group_status
  become: true

- name: Create user "{{ systemuser }}"
  ansible.builtin.user:
    name: "{{ systemuser }}"
    comment: "{{ comments }}"
    append: false
    shell: /bin/bash
    password: "{{ user_pass | password_hash('sha512') }}"
    update_password: on_create
    group: "{{ group_name | default(systemuser) }}"
    state: present
  notify:
    - Set password expiry
    - Retrieve Password
  register: user_status
  become: true
  failed_when: user_status is failed and user_status.msg is not defined
  when: user_check.getent_passwd is not defined or systemuser not in user_check.getent_passwd

- name: Ensure sudoers file for "{{ systemuser }}" contains only the correct entry
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/{{ systemuser }}"
    content: "{{ systemuser }}   {{ sudoers }}\n"
    mode: "0440"
    owner: root
    group: root
    force: true
    validate: /usr/sbin/visudo -csf %s
  become: true
